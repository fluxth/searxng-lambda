name: PR Check
on:
  pull_request:
  merge_group:

jobs:
  pr-check:
    name: Build & Test Docker Image
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.CI_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/arm64

      - name: Pin SearXNG version
        run: cd searxng && python3 searx/version.py freeze

      - name: Export version to environment
        run: |
          echo "DOCKER_TAG=$(./scripts/extract_version.sh)" >> "$GITHUB_ENV"

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: |
            searxng-lambda:local-latest
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          push: false
          load: true

      - name: Setup Node JS
        uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: tests/package-lock.json

      - name: Start test containers
        run: cd tests && docker-compose up -d

      - name: Install NPM packages
        run: cd tests && npm ci

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: tests
          install: false

      - name: Hide old comments
        uses: kanga333/comment-hider@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a PR comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let body = '## Docker Image Info\n'
            body += 'When this PR gets merged, the Docker Image will have the following info:\n'
            body += '- Tag: `${{ env.DOCKER_TAG }}`\n'

            const util = require('node:util');
            const execAsync = util.promisify(require('node:child_process').exec);
            const subproc = await execAsync('docker images --no-trunc --quiet searxng-lambda:local-latest');

            body += `- Hash: \`${subproc.stdout.trim()}\`\n`
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            })
