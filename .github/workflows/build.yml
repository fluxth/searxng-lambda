name: Build & Test Docker Image
on:
  pull_request:
  push:
    branches: main

jobs:
  draft-release:
    name: Draft next release
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    concurrency:
      group: release-draft
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set version environment variables
        run: python3 scripts/version.py --bump patch >> "$GITHUB_ENV"

      - name: Generate release notes
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");

            const { data } = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: "${{ env.SEARXNG_LAMBDA_NEXT_VERSION }}",
              target_commitish: "${{ github.sha }}",
            });

            const { body: releaseNotes } = data;
            fs.writeFileSync(".github/RELEASE_NOTES.md", releaseNotes + "\n");


      - name: Build release body
        run: |
          cd .github
          cat - RELEASE_NOTES.md << "EOF" > RELEASE_BODY.md
          ## Summary

          | Component | Version |
          | :--- | :--- |
          | `${{ env.SEARXNG_LAMBDA_APP_IMAGE }}` | `${{ env.SEARXNG_LAMBDA_APP_TAG }}` |
          | `${{ env.SEARXNG_LAMBDA_LWA_IMAGE }}` | `${{ env.SEARXNG_LAMBDA_LWA_TAG }}` |

          EOF

      - name: Create or update release draft
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('./.github/workflows/scripts/create-update-release-draft.js');
            const inputs = {
              nextVersion: "${{ env.SEARXNG_LAMBDA_NEXT_VERSION }}",
              sha: "${{ github.sha }}",
            };

            return await script({ github, context, inputs });

  build-test:
    name: Build & Test Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        with:
          platforms: linux/arm64

      - name: Build Docker Image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          tags: searxng-lambda:local-latest
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64
          push: false
          load: true

      - name: Setup Node JS
        uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d # v3.8.1
        with:
          cache: npm
          cache-dependency-path: tests/package-lock.json

      - name: Start test containers
        run: cd tests && docker-compose up -d

      - name: Install NPM packages
        run: cd tests && npm ci

      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: tests
          install: false

  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Lint with pre-commit
        uses: pre-commit/action@646c83fcd040023954eafda54b4db0192ce70507 # v3.0.0
